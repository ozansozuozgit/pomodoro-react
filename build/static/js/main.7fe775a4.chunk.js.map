{"version":3,"sources":["assets/modeSound.mp3","assets/alarm.mp3","assets/actionSound.mp3","assets/study.gif","assets/rest.gif","context/modeContext.js","components/Title.js","context/modeReducer.js","context/types.js","context/ModeState.js","components/ModeButton.js","components/ModeButtons.js","components/Timer.js","components/Slider.js","components/ActionButton.js","components/Background.js","components/Container.js","App.js","index.js"],"names":["module","exports","modeContext","createContext","AppTitle","styled","h1","props","mode","Title","useContext","ModeContext","state","action","type","payload","timer","time","totalSeconds","seconds","secondsLeft","isClockRunning","ModeState","useReducer","modeReducer","dispatch","Provider","value","changeMode","setTimer","updateTimer","setClockRunning","clockRunning","children","Name","button","ModeButton","name","actionAudio","Audio","modeSound","volume","onClick","play","disabled","Container","div","ModeButtons","TimerDisplay","span","Timer","useEffect","startTimer","stopTimer","intervalRef","useRef","alarmAudio","alarm","then","Date","now","displayTimeLeft","countdown","setInterval","Math","round","clearInterval","current","minutes","floor","remainderSeconds","Input","input","Slider","setSlider","useState","slider","min","max","onChange","e","target","Button","ActionButton","actionSound","BackgroundImage","img","index","Background","src","study","rest","PomodoroContainer","start","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fe775a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/modeSound.40c711de.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alarm.7a795c6f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/actionSound.e22d96e0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/study.cf9b8a87.gif\";","module.exports = __webpack_public_path__ + \"static/media/rest.26719c94.gif\";","import { createContext } from 'react';\n\nconst modeContext = createContext();\n\nexport default modeContext;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../context/modeContext';\n\nconst Title = () => {\n  const modeContext = useContext(ModeContext);\n\n  const { mode } = modeContext;\n\n  return <AppTitle mode={mode}>Pomodoro</AppTitle>;\n};\n\nconst AppTitle = styled.h1`\n  font-size: 2.9em;\n  color: ${(props) => (props.mode === 'study' ? '#ff5656' : '#61DBFB')};\n  ${'' /* text-align: center; */}\n  margin: 0;\n  padding-top: 1em;\n`;\n\nexport default Title;\n","import {\n  CHANGE_MODE,\n  SET_TIMER,\n  UPDATE_TIMER,\n  SET_CLOCK_RUNNING,\n} from './types';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case CHANGE_MODE:\n      return {\n        ...state,\n        mode: action.payload,\n      };\n    case SET_TIMER:\n      return {\n        ...state,\n        timer: action.payload.time,\n        totalSeconds: action.payload.seconds,\n      };\n    case UPDATE_TIMER:\n      return {\n        ...state,\n        timer: action.payload.time,\n        totalSeconds: action.payload.secondsLeft,\n      };\n    case SET_CLOCK_RUNNING: {\n      return { ...state, isClockRunning: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n","export const CHANGE_MODE = 'CHANGE_MODE';\nexport const SET_TIMER = 'SET_TIMER';\nexport const UPDATE_TIMER = 'UPDATE_TIMER';\nexport const SET_CLOCK_RUNNING = 'SET_CLOCK_RUNNING'","import React, { useReducer } from 'react';\nimport ModeContext from './modeContext';\nimport modeReducer from './modeReducer';\n\nimport {\n  CHANGE_MODE,\n  SET_TIMER,\n  UPDATE_TIMER,\n  SET_CLOCK_RUNNING,\n} from './types';\n\nconst ModeState = (props) => {\n  const initialState = {\n    mode: 'study',\n    totalSeconds: 1500,\n    isClockRunning: false,\n    timer: '25:00',\n  };\n\n  const [state, dispatch] = useReducer(modeReducer, initialState);\n\n  // Change mode\n  const changeMode = (mode) => {\n    dispatch({ type: CHANGE_MODE, payload: mode });\n  };\n\n  // Set Time\n  const setTimer = (time, seconds) => {\n    dispatch({ type: SET_TIMER, payload: { time, seconds } });\n  };\n\n  // Start Timer\n  const updateTimer = (time, secondsLeft) => {\n    dispatch({\n      type: UPDATE_TIMER,\n      payload: { time, secondsLeft },\n    });\n  };\n\n  // Set is clock running\n  const setClockRunning = (clockRunning) => {\n    dispatch({\n      type: SET_CLOCK_RUNNING,\n      payload: clockRunning,\n    });\n  };\n\n  return (\n    <ModeContext.Provider\n      value={{\n        mode: state.mode,\n        timer: state.timer,\n        totalSeconds: state.totalSeconds,\n        isClockRunning: state.isClockRunning,\n        changeMode,\n        setTimer,\n        updateTimer,\n        setClockRunning,\n      }}\n    >\n      {props.children}\n    </ModeContext.Provider>\n  );\n};\n\nexport default ModeState;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../context/modeContext';\nimport modeSound from '../assets/modeSound.mp3';\n\nconst ModeButton = ({ name }) => {\n  const modeContext = useContext(ModeContext);\n\n  const { setTimer, changeMode, isClockRunning } = modeContext;\n\n  let actionAudio = new Audio(modeSound);\n  actionAudio.volume = 0.2;\n\n  const onChange = () => {\n    actionAudio.play();\n\n    if (name === 'STUDY') {\n      changeMode('study');\n      setTimer('25:00', 25 * 60);\n    } else {\n      changeMode('rest');\n      setTimer('10:00', 10 * 60);\n    }\n  };\n\n  return (\n    <Name\n      mode={name}\n      onClick={onChange}\n      disabled={isClockRunning === true ? true : false}\n    >\n      {name}\n    </Name>\n  );\n};\n\nconst Name = styled.button`\n  background-color: ${(props) =>\n    props.mode === 'STUDY' ? '#ff5656' : '#61DBFB'};\n  border: none;\n  border-radius: 15px;\n  font-size: 1.8em;\n  width: 150px;\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport default ModeButton;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ModeButton from './ModeButton';\n\nconst Container = styled.div`\n  width: 350px;\n  margin: 20px auto;\n  display: flex;\n  justify-content: space-around;\n`;\n\nconst ModeButtons = () => {\n  return (\n    <div>\n      <Container>\n        <ModeButton name=\"STUDY\" />\n        <ModeButton name=\"REST\" />\n      </Container>\n    </div>\n  );\n};\n\nexport default ModeButtons;\n","import React, { useContext, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../context/modeContext';\nimport alarm from '../assets/alarm.mp3';\n\nconst Timer = () => {\n  const modeContext = useContext(ModeContext);\n\n  const {\n    isClockRunning,\n    updateTimer,\n    totalSeconds,\n    mode,\n    timer,\n    changeMode,\n    setTimer,\n    setClockRunning,\n  } = modeContext;\n\n  useEffect(() => {\n    if (isClockRunning) {\n      startTimer();\n    } else {\n      stopTimer();\n    }\n    // eslint-disable-next-line\n  }, [isClockRunning]);\n\n  const intervalRef = useRef();\n\n  let alarmAudio = new Audio(alarm);\n  alarmAudio.volume = 0.5;\n\n  const startTimer = () => {\n    const now = Date.now();\n    const then = now + totalSeconds * 1000;\n    displayTimeLeft(totalSeconds);\n\n    let countdown = setInterval(() => {\n      const secondsLeft = Math.round((then - Date.now()) / 1000);\n\n      if (secondsLeft < 0) {\n        alarmAudio.play();\n        clearInterval(countdown);\n        setClockRunning(false);\n        if (mode === 'study') {\n          changeMode('rest');\n          setTimer('10:00', 10 * 60);\n        } else {\n          changeMode('study');\n          setTimer('25:00', 25 * 60);\n        }\n        return;\n      }\n      displayTimeLeft(secondsLeft);\n    }, 1000);\n\n    intervalRef.current = countdown;\n  };\n\n  const stopTimer = () => {\n    clearInterval(intervalRef.current);\n  };\n\n  const displayTimeLeft = (seconds) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainderSeconds = seconds % 60;\n    let timer = `${minutes < 10 ? '0' : ''}${minutes}:${\n      remainderSeconds < 10 ? '0' : ''\n    }${remainderSeconds}`;\n    updateTimer(timer, seconds);\n  };\n\n  return <TimerDisplay mode={mode}>{timer}</TimerDisplay>;\n};\n\nconst TimerDisplay = styled.span`\n  color: ${(props) => (props.mode === 'study' ? '#ff5656' : '#61DBFB')};\n  font-size: 8em;\n  padding: 30px;\n  margin-top: 20px;\n  display: inline-block;\n  border-radius: 15px;\n  box-shadow: 0 0 10px\n    ${(props) => (props.mode === 'study' ? '#ff5656' : '#61DBFB')};\n  width: 280px;\n`;\n\nexport default Timer;\n","import React, { useContext, useState, useEffect } from 'react';\nimport ModeContext from '../context/modeContext';\nimport styled from 'styled-components';\n\nconst Slider = () => {\n  const modeContext = useContext(ModeContext);\n\n  const { setTimer, mode, totalSeconds, isClockRunning } = modeContext;\n\n  useEffect(() => {\n    setSlider(totalSeconds / 60);\n  }, [totalSeconds]);\n\n  const [slider, setSlider] = useState(25);\n\n  const onSlide = (e) => {\n    const minutes = e.target.value;\n    setSlider(minutes);\n    setTimer(`${minutes < 10 ? '0' : ''}${minutes}:00`, minutes * 60);\n  };\n\n  return (\n    <Input\n      type=\"range\"\n      name=\"slider\"\n      min=\"1\"\n      max=\"60\"\n      value={slider}\n      onChange={onSlide}\n      mode={mode}\n      disabled={isClockRunning === true ? true : false}\n    />\n  );\n};\n\nconst Input = styled.input`\n  -webkit-appearance: none;\n  display: block;\n  border: 1px solid rgba(255, 0, 80, 0.55);\n  margin: 30px auto;\n  border-radius: 10px;\n  width: 300px;\n  background: black;\n  height: 20px;\n  border-color: ${(props) => (props.mode === 'study' ? '#ff5656' : '#61DBFB')};\n\n  &:disabled {\n    filter: grayscale(80%);\n  }\n\n  &::-moz-range-thumb {\n    -webkit-appearance: none;\n    height: 30px;\n    width: 30px;\n    border-radius: 50%;\n  }\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    height: 30px;\n    width: 30px;\n    background: #ffffff;\n    border-radius: 50%;\n  }\n\n  &:focus {\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nexport default Slider;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../context/modeContext';\nimport actionSound from '../assets/actionSound.mp3';\n\nconst ActionButton = () => {\n  const modeContext = useContext(ModeContext);\n\n  const { isClockRunning, mode, setClockRunning } = modeContext;\n\n  let actionAudio = new Audio(actionSound);\n  actionAudio.volume = 0.1;\n\n  const timerAction = () => {\n    actionAudio.play();\n    if (isClockRunning === false) {\n      setClockRunning(true);\n    } else {\n      setClockRunning(false);\n    }\n  };\n\n  return (\n    <Button onClick={timerAction} mode={mode}>\n      {isClockRunning === false ? 'START' : 'PAUSE'}\n    </Button>\n  );\n};\n\nconst Button = styled.button`\n  background-color: transparent;\n  border: none;\n  font-size: 3.2em;\n  margin-top: 15px;\n  cursor: pointer;\n  outline: none;\n  color: ${(props) => (props.mode === 'study' ? '#ff5656' : '#61DBFB')};\n\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nexport default ActionButton;\n","import React, { useContext, Fragment } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../context/modeContext';\nimport study from '../assets/study.gif';\nimport rest from '../assets/rest.gif';\n\nconst Background = () => {\n  const modeContext = useContext(ModeContext);\n\n  const { mode } = modeContext;\n\n  return (\n    <Fragment>\n      <BackgroundImage\n        src={study}\n        index={mode === 'study' ? true : false}\n      ></BackgroundImage>\n      <BackgroundImage src={rest} index={'rest'}></BackgroundImage>\n    </Fragment>\n  );\n};\n\nconst BackgroundImage = styled.img`\n  position: absolute;\n  z-index: ${(props) => (props.index === true ? '-1' : '-2')};\n  height: 100%;\n  left: 0;\n  width: 100%;\n`;\n\nexport default Background;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport ModeContext from '../context/modeContext';\n\nconst Container = (props) => {\n  const modeContext = useContext(ModeContext);\n\n  const { isClockRunning } = modeContext;\n\n  return (\n    <PomodoroContainer start={isClockRunning ? 1 : 0}>\n      {props.children}\n    </PomodoroContainer>\n  );\n};\n\nconst PomodoroContainer = styled.div`\n  background-color: ${(props) => (props.start ? '' : 'black')};\n  height: 100vh;\n  text-align: center;\n  font-family: 'Anton', sans-serif;\n`;\nexport default Container;\n","import React from 'react';\nimport Title from './components/Title';\nimport ModeState from './context/ModeState';\nimport ModeButtons from './components/ModeButtons';\nimport Timer from './components/Timer';\nimport Slider from './components/Slider';\nimport ActionButton from './components/ActionButton';\nimport Background from './components/Background';\nimport Container from './components/Container';\n\n\nconst App = () => {\n  return (\n    <ModeState>\n      <Container>\n        <Background />\n        <Title />\n        <ModeButtons />\n        <Timer />\n        <Slider />\n        <ActionButton />\n      </Container>\n    </ModeState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}